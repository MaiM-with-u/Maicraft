# -*- coding: utf-8 -*-
# Generated by MaiAgent after successful task execution

async def collect_remaining_gravel(bot):
    # 检查当前沙砾数量
    inventory = await bot.inventory
    gravel_count = sum(item.count for item in inventory if item.name == "gravel")
    
    if gravel_count >= 20:
        await bot.chat("沙砾收集已完成: {}/20".format(gravel_count))
        return
    
    needed = 20 - gravel_count
    await bot.chat("开始收集沙砾: 当前{}/20，需要再收集{}个".format(gravel_count, needed))
    
    # 查找附近沙砾
    success, gravel_blocks = await bot.find_blocks("gravel", 10)
    if not success or not gravel_blocks:
        await bot.chat("附近未找到沙砾")
        return
    
    # 按距离排序
    gravel_blocks.sort(key=lambda b: (b.position.x - 111)**2 + 
                                   (b.position.y - 59)**2 + 
                                   (b.position.z - 142)**2)
    
    for block in gravel_blocks:
        if gravel_count >= 20:
            break
            
        pos = block.position
        # 移动到方块旁边
        await bot.move(pos.x, pos.y + 1, pos.z)
        
        # 挖掘方块
        success, exists = await bot.mine_block(pos.x, pos.y, pos.z, False)
        if success and exists:
            gravel_count += 1
            await bot.chat("采集沙砾: 当前{}/20".format(gravel_count))
        else:
            await bot.chat("无法采集沙砾方块: ({},{},{})".format(pos.x, pos.y, pos.z))
    
    if gravel_count >= 20:
        await bot.chat("沙砾收集完成: 20/20")
    else:
        await bot.chat("沙砾收集未完成: {}/20".format(gravel_count))