# -*- coding: utf-8 -*-
# Generated by MaiAgent after successful task execution

# main function
async def digDownAndEnterFirstUndergroundLayer(bot):
    # 获取当前位置
    pos = await bot.position
    x, y, z = pos.x, pos.y, pos.z
    
    # 下方方块坐标
    below_pos = (x, y - 1, z)
    
    # 检查下方方块
    block_below = await bot.get_block(x, y - 1, z)
    if not block_below or block_below.block_type == "air":
        await bot.chat("下方已经是空的，无需挖掘。")
        return False

    # 挖掘脚下方块
    success, exists = await bot.mine_block(x, y - 1, z, digOnly=False)
    if not success:
        await bot.chat(f"无法挖掘下方的方块 {block_below.block_type}。")
        return False
    await bot.chat(f"已挖掘下方方块 {block_below.block_type}。")

    # 向下移动一格
    success, final_pos, distance = await bot.move(x, y - 1, z)
    if not success or final_pos.y != y - 1:
        await bot.chat("无法移动到下方位置。")
        return False
    await bot.chat("已安全进入地下第一层。")

    # 放置火把进行照明
    # 尝试在侧面放置火把，比如在背后 (x, y, z-1) 或旁边
    torch_placed = False
    for dx, dz in [(0, -1), (0, 1), (-1, 0), (1, 0)]:
        side_x, side_y, side_z = x + dx, y, z + dz
        block_at_side = await bot.get_block(side_x, side_y, side_z)
        if block_at_side and block_at_side.block_type != "air":
            success, exists = await bot.place_block("torch", side_x, side_y + 1, side_z)
            if success:
                torch_placed = True
                await bot.chat("已放置火把，照明安全。")
                break

    if not torch_placed:
        # 如果侧面无法放置，则尝试在脚下上方放置（头顶）
        success, exists = await bot.place_block("torch", x, y, z)
        if success:
            torch_placed = True
            await bot.chat("已在头顶放置火把，照明安全。")

    if not torch_placed:
        await bot.chat("无法放置火把，周围空间受限。")
        return False

    # 任务完成
    await bot.chat("任务完成：已成功向下挖掘并安全进入地下第一层。")
    return True